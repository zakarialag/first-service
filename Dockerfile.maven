# Use a base image with OpenJDK, suitable for Java and other JVM languages
FROM openjdk:22-ea-34-bookworm

# Set the working directory
WORKDIR /app

# Install system dependencies
RUN apt-get update && \
    apt-get install -y \
        maven \
        gradle \
        nano \
        apt-transport-https \
        dirmngr \
        gnupg \
        software-properties-common && \
    apt-get clean && \
    rm -rf /var/lib/apt/lists/*

# Install .NET SDK
RUN wget https://packages.microsoft.com/config/debian/11/packages-microsoft-prod.deb -O packages-microsoft-prod.deb && \
    dpkg -i packages-microsoft-prod.deb && \
    apt-get update && \
    apt-get install -y dotnet-sdk-6.0 && \
    rm packages-microsoft-prod.deb


# Download and install the Sonar Scanner CLI
RUN wget https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-6.1.0.4477-linux-x64.zip && \
    unzip sonar-scanner-cli-6.1.0.4477-linux-x64.zip -d /opt && \
    rm sonar-scanner-cli-6.1.0.4477-linux-x64.zip

# Ensure the correct sonar-scanner binary is used
RUN ln -s /opt/sonar-scanner-6.1.0.4477-linux-x64/bin/sonar-scanner /usr/local/bin/sonar-scanner && \
    ls -la /opt/sonar-scanner-6.1.0.4477-linux-x64/bin/ && \
    sonar-scanner --version

ENV PATH="/opt/sonar-scanner-6.1.0.4477-linux-x64/bin:${PATH}"

# Copy the project files into the image
COPY . /app/

# Example command to run Maven, Gradle or .NET Core CLI
# Set here commad which you have get form sonarkube project creation
# Give permission to execute the scanner.sh script
RUN chmod +x /app/scanner.sh

CMD ["tail", "-f", "/dev/null"]
